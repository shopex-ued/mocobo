@import "global";

//
// Block Grid Variables
//
$include-html-block-grid-classes: $include-html-classes !default;

$block-grid-class: 'block-grid' !default;
// Enables media queries for block-grid classes. Set to false if writing semantic HTML.
$block-grid-media-queries: false !default;

// We use this to control the maximum number of block grid elements per row
$block-grid-elements: 12 !default;
$block-grid-default-spacing: $grid-gutter * 2 !default;

$align-block-grid-to-grid: false !default;

//
// Block Grid Mixins
//

// Create a custom block grid
//
// $per-row - # of items to display per row. Default: false.
// $spacing - # of ems to use as padding on each block item. Default: to-rem(20).
// $include-spacing - Adds padding to our list item. Default: true.
// $base-style - Apply a base style to block grid. Default: true.
@mixin block-grid($per-row: false, $spacing: $block-grid-default-spacing, $include-spacing: true, $base-style: true) {
    @if $base-style {
        display: block;
        margin: 0;
        @extend .clearfix;
        > li {
            float: left;
            @if $include-spacing {
                padding: $spacing;
            }
            height: auto;
            list-style: none;
        }
    }
    @if $per-row {
        > li {
            @if $include-spacing {
                padding: $spacing;
            }
            width: 100% / $per-row;
            // &:nth-of-type(1n) {
            //     clear: none;
            // }
            // &:nth-of-type(#{$per-row}n+1) {
            //     clear: both;
            // }
            @if $align-block-grid-to-grid {
                @include block-grid-aligned($per-row, $spacing);
            }
        }
    }
}

@mixin block-grid-aligned($per-row, $spacing) {
    @for $i from 1 through $block-grid-elements {
        @if $per-row >= $i {
            $grid-column: "+" + $i;
            @if $per-row == $i {
                $grid-column: "";
            }
            &:nth-of-type(#{$per-row}n#{unquote($grid-column)}) {
                padding-left: $spacing - $spacing / $per-row * ($per-row - ($i - 1));
                padding-right: $spacing - $spacing / $per-row * $i;
            }
        }
    }
}

// Generate presentational markup for block grid.
//
// $size - Name of class to use, i.e. "large" will generate .large-block-grid-1, .large-block-grid-2, etc.
@mixin block-grid-html-classes($size, $include-spacing) {
    @for $i from 1 through $block-grid-elements {
        .block-#{$size}-#{$i} {
            @include block-grid($i, $block-grid-default-spacing, $include-spacing, false);
        }
    }
}

@include exports("block-grid") {
    @if $include-html-block-grid-classes {
        [class*="#{$block-grid-class}-"] {
            @include block-grid;
        }
        @if $block-grid-media-queries {
            @media #{$small-up} {
                @include block-grid-html-classes($size: small, $include-spacing: false);
            }
            @media #{$medium-up} {
                @include block-grid-html-classes($size: medium, $include-spacing: false);
            }
        }
        @else {
            @include block-grid-html-classes($size: grid, $include-spacing: false);
        }
    }
}